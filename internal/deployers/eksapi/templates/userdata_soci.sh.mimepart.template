MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="BOUNDARY"

--BOUNDARY
Content-Type: application/node.eks.aws

---
apiVersion: node.eks.aws/v1alpha1
kind: NodeConfig
spec:
  featureGates:
    FastContainerImagePull: true
  cluster:
    name: {{.ClusterName}}
    apiServerEndpoint: {{.APIServerEndpoint}}
    certificateAuthority: {{.CACert}}
    cidr: {{.ClusterCIDR}}

--BOUNDARY
Content-Type: text/x-shellscript; charset="us-ascii"

#!/bin/bash
# SOCI snapshotter configuration for fast container image pull

# Image pull settings overrides
max_concurrent_downloads={{.MaxConcurrentDownloads}}
max_concurrent_downloads_per_image={{.MaxConcurrentDownloadsPerImage}}
max_concurrent_unpacks_per_image={{.MaxConcurrentUnpacksPerImage}}

# Apply SOCI configuration updates
if [ -f /etc/soci-snapshotter-grpc/config.toml ]; then
  echo "Configuring SOCI snapshotter with:"
  echo "- max_concurrent_downloads = $max_concurrent_downloads"
  echo "- max_concurrent_downloads_per_image = $max_concurrent_downloads_per_image"
  echo "- max_concurrent_unpacks_per_image = $max_concurrent_unpacks_per_image"
  
  sed -i "s/^max_concurrent_downloads = .*$/max_concurrent_downloads = $max_concurrent_downloads/" /etc/soci-snapshotter-grpc/config.toml
  sed -i "s/^max_concurrent_downloads_per_image = .*$/max_concurrent_downloads_per_image = $max_concurrent_downloads_per_image/" /etc/soci-snapshotter-grpc/config.toml
  sed -i "s/^max_concurrent_unpacks_per_image = .*$/max_concurrent_unpacks_per_image = $max_concurrent_unpacks_per_image/" /etc/soci-snapshotter-grpc/config.toml
  
  # Restart the SOCI snapshotter service to apply changes
  systemctl restart soci-snapshotter-grpc
fi

# Log completion and status
echo "SOCI configuration completed at $(date)"
systemctl status soci-snapshotter-grpc || true

--BOUNDARY--
